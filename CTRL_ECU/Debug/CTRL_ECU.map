Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              ./twi.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./CTRL_main.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./CTRL_main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

sent_pass           0x5               ./CTRL_main.o
password2           0x5               ./CTRL_main.o
key                 0x1               ./CTRL_main.o
password1           0x5               ./CTRL_main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD ./CTRL_main.o
LOAD ./buzzer.o
LOAD ./dc_motor.o
LOAD ./delay.o
LOAD ./external_eeprom.o
LOAD ./gpio.o
LOAD ./timer.o
LOAD ./twi.o
LOAD ./uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x12e0
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_13
                0x0000008e                __vector_17
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./CTRL_main.o
 .text          0x00000092        0x0 ./buzzer.o
 .text          0x00000092        0x0 ./dc_motor.o
 .text          0x00000092        0x0 ./delay.o
 .text          0x00000092        0x0 ./external_eeprom.o
 .text          0x00000092        0x0 ./gpio.o
 .text          0x00000092        0x0 ./timer.o
 .text          0x00000092        0x0 ./twi.o
 .text          0x00000092        0x0 ./uart.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.Password_Check
                0x00000092       0xfc ./CTRL_main.o
                0x00000092                Password_Check
 .text.Password_EEPROM
                0x0000018e       0xce ./CTRL_main.o
                0x0000018e                Password_EEPROM
 .text.main     0x0000025c      0x1a4 ./CTRL_main.o
                0x0000025c                main
 .text.Buzzer_init
                0x00000400       0x22 ./buzzer.o
                0x00000400                Buzzer_init
 .text.Buzzer_ON
                0x00000422       0x18 ./buzzer.o
                0x00000422                Buzzer_ON
 .text.Buzzer_OFF
                0x0000043a       0x18 ./buzzer.o
                0x0000043a                Buzzer_OFF
 .text.DcMotor_Init
                0x00000452       0x36 ./dc_motor.o
                0x00000452                DcMotor_Init
 .text.DcMotor_Rotate
                0x00000488       0x80 ./dc_motor.o
                0x00000488                DcMotor_Rotate
 .text.timerTick
                0x00000508       0x4a ./delay.o
 .text.delay_ms
                0x00000552       0xb4 ./delay.o
                0x00000552                delay_ms
 .text.EEPROM_writeByte
                0x00000606       0x82 ./external_eeprom.o
                0x00000606                EEPROM_writeByte
 .text.EEPROM_readByte
                0x00000688       0xc0 ./external_eeprom.o
                0x00000688                EEPROM_readByte
 .text.GPIO_setupPinDirection
                0x00000748      0x1d6 ./gpio.o
                0x00000748                GPIO_setupPinDirection
 .text.GPIO_writePin
                0x0000091e      0x1d6 ./gpio.o
                0x0000091e                GPIO_writePin
 .text.GPIO_readPin
                0x00000af4      0x136 ./gpio.o
                0x00000af4                GPIO_readPin
 .text.GPIO_setupPortDirection
                0x00000c2a       0x88 ./gpio.o
                0x00000c2a                GPIO_setupPortDirection
 .text.GPIO_writePort
                0x00000cb2       0x88 ./gpio.o
                0x00000cb2                GPIO_writePort
 .text.GPIO_readPort
                0x00000d3a       0x8a ./gpio.o
                0x00000d3a                GPIO_readPort
 .text.__vector_9
                0x00000dc4       0x66 ./timer.o
                0x00000dc4                __vector_9
 .text.__vector_19
                0x00000e2a       0x66 ./timer.o
                0x00000e2a                __vector_19
 .text.TIMER_Init
                0x00000e90       0x80 ./timer.o
                0x00000e90                TIMER_Init
 .text.TIMER_setCallBack
                0x00000f10       0x24 ./timer.o
                0x00000f10                TIMER_setCallBack
 .text.TIMER_DeInit
                0x00000f34       0x2e ./timer.o
                0x00000f34                TIMER_DeInit
 .text.TWI_init
                0x00000f62       0x72 ./twi.o
                0x00000f62                TWI_init
 .text.TWI_start
                0x00000fd4       0x20 ./twi.o
                0x00000fd4                TWI_start
 .text.TWI_stop
                0x00000ff4       0x16 ./twi.o
                0x00000ff4                TWI_stop
 .text.TWI_writeByte
                0x0000100a       0x2e ./twi.o
                0x0000100a                TWI_writeByte
 .text.TWI_readByteWithACK
                0x00001038       0x26 ./twi.o
                0x00001038                TWI_readByteWithACK
 .text.TWI_readByteWithNACK
                0x0000105e       0x26 ./twi.o
                0x0000105e                TWI_readByteWithNACK
 .text.TWI_getStatus
                0x00001084       0x1e ./twi.o
                0x00001084                TWI_getStatus
 .text.UART_init
                0x000010a2       0xd2 ./uart.o
                0x000010a2                UART_init
 .text.UART_sendByte
                0x00001174       0x2e ./uart.o
                0x00001174                UART_sendByte
 .text.UART_recieveByte
                0x000011a2       0x1e ./uart.o
                0x000011a2                UART_recieveByte
 .text.UART_sendString
                0x000011c0       0x52 ./uart.o
                0x000011c0                UART_sendString
 .text.UART_receiveString
                0x00001212       0x86 ./uart.o
                0x00001212                UART_receiveString
 .text.libgcc   0x00001298       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00001298                __udivmodsi4
 .text.libgcc   0x000012dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x000012dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x000012dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x000012dc                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000012dc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000012dc                exit
                0x000012dc                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000012dc        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000012e0                _etext = .

.data           0x00800060       0x12 load address 0x000012e0
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 ./CTRL_main.o
 .data          0x00800060        0x0 ./buzzer.o
 .data          0x00800060        0x0 ./dc_motor.o
 .data          0x00800060        0x0 ./delay.o
 .data          0x00800060        0x0 ./external_eeprom.o
 .data          0x00800060        0x0 ./gpio.o
 .data          0x00800060        0x0 ./timer.o
 .data          0x00800060        0x0 ./twi.o
 .data          0x00800060        0x0 ./uart.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.C.16.1542
                0x00800060        0x5 ./CTRL_main.o
 .rodata.C.15.1541
                0x00800065        0x7 ./CTRL_main.o
 .rodata.C.5.1243
                0x0080006c        0x5 ./delay.o
 *(.gnu.linkonce.d*)
                0x00800072                . = ALIGN (0x2)
 *fill*         0x00800071        0x1 00
                0x00800072                _edata = .
                0x00800072                PROVIDE (__data_end, .)

.bss            0x00800072       0x1b
                0x00800072                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800072        0x0 ./CTRL_main.o
 .bss           0x00800072        0x0 ./buzzer.o
 .bss           0x00800072        0x0 ./dc_motor.o
 .bss           0x00800072        0x0 ./delay.o
 .bss           0x00800072        0x0 ./external_eeprom.o
 .bss           0x00800072        0x0 ./gpio.o
 .bss           0x00800072        0x0 ./timer.o
 .bss           0x00800072        0x0 ./twi.o
 .bss           0x00800072        0x0 ./uart.o
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800072        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.valid     0x00800072        0x1 ./CTRL_main.o
                0x00800072                valid
 .bss.valid_flag
                0x00800073        0x1 ./CTRL_main.o
                0x00800073                valid_flag
 .bss.fail_counter
                0x00800074        0x1 ./CTRL_main.o
                0x00800074                fail_counter
 .bss.start_again
                0x00800075        0x1 ./CTRL_main.o
                0x00800075                start_again
 .bss.g_timerTick
                0x00800076        0x4 ./delay.o
 .bss.g_secTick
                0x0080007a        0x1 ./delay.o
 .bss.g_callBackPtr
                0x0080007b        0x2 ./timer.o
 *(COMMON)
 COMMON         0x0080007d       0x10 ./CTRL_main.o
                0x0080007d                sent_pass
                0x00800082                password2
                0x00800087                key
                0x00800088                password1
                0x0080008d                PROVIDE (__bss_end, .)
                0x000012e0                __data_load_start = LOADADDR (.data)
                0x000012f2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080008d        0x0
                0x0080008d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080008d                PROVIDE (__noinit_end, .)
                0x0080008d                _end = .
                0x0080008d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x228c
 *(.stab)
 .stab          0x00000000      0x9a8 ./CTRL_main.o
 .stab          0x000009a8      0x210 ./buzzer.o
                                0x450 (size before relaxing)
 .stab          0x00000bb8      0x210 ./dc_motor.o
                                0x4bc (size before relaxing)
 .stab          0x00000dc8      0x270 ./delay.o
                                0x30c (size before relaxing)
 .stab          0x00001038      0x318 ./external_eeprom.o
                                0x3e4 (size before relaxing)
 .stab          0x00001350      0x5e8 ./gpio.o
                                0x870 (size before relaxing)
 .stab          0x00001938      0x2a0 ./timer.o
                                0x54c (size before relaxing)
 .stab          0x00001bd8      0x33c ./twi.o
                                0x5b8 (size before relaxing)
 .stab          0x00001f14      0x378 ./uart.o
                                0x624 (size before relaxing)

.stabstr        0x00000000     0x135a
 *(.stabstr)
 .stabstr       0x00000000     0x135a ./CTRL_main.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(CTRL_ECU.elf elf32-avr)
LOAD linker stubs
